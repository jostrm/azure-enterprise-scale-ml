steps:

- checkout: self # Required as first property. Alias of the repository resource to check out or 'none'. 
  submodules: true # set to 'true' for a single level of submodules or 'recursive' to get submodules of submodules. Default is not to fetch submodules.
  continueOnError: false # Continue running even on failure?.  (false,n,no,off,on,true,y,yes)
  displayName: GIT # Human-readable name for the task. 
  enabled: true # Run this task when the job runs?.  (false,n,no,off,on,true,y,yes)
  name: GIT # ID of the step.  ([-_A-Za-z0-9]*)

- task: AzureCLI@2
  displayName: '00_pwsh_print_info'
  inputs:
    azureSubscription: ${{ parameters.serviceConnection }}
    scriptType: pscore
    scriptLocation: inlineScript
    inlineScript: |
      echo "dev_test_prod is: $(dev_test_prod)"
      echo "parameters  serviceConnection is:  ${{ parameters.serviceConnection }}"
- task: AzureCLI@2
  displayName: '01_az_bicep_common_rg'
  inputs:
    azureSubscription: ${{ parameters.serviceConnection }}
    scriptType: bash
    scriptLocation: inlineScript
    inlineScript: |
     az deployment sub create \
     --name "esml-cmn-$(dev_test_prod)$(admin_locationSuffix)$(admin_aifactorySuffixRG)$(admin_location)-DeplRG" \
     --subscription "$(dev_test_prod_sub_id)" \
     --location "$(admin_location)" \
     --template-file "esml-common\main\11-rgCommon.bicep" \
     --parameters enableAdminVM="$(enableAdminVM)" \
     --parameters aifactorySuffixRG="$(admin_aifactorySuffixRG)" \
     --parameters commonRGNamePrefix="$(admin_aifactoryPrefixRG)" \
     --parameters esmlCommonOverride="$(vnetResourceGroupBase)" \
     --parameters locationSuffix="$(admin_locationSuffix)" \
     --parameters location="$(admin_location)" \
     --parameters tags='$(tags)' \
     --parameters env="$(dev_test_prod)" \
     --parameters technicalAdminsObjectID="$(technical_admins_ad_object_id)" \
     --parameters useAdGroups="$(use_ad_groups)" \
     --parameters technicalAdminsEmail="$(technical_admins_email)"
    workingDirectory: '$(System.DefaultWorkingDirectory)/azure-enterprise-scale-ml/environment_setup/aifactory/bicep'

- task: AzureCLI@2
  displayName: '02_az_bicep_networking'
  condition: and(eq(variables['runNetworkingVar'], 'true'),eq(variables['BYO_subnets'], 'false'))
  inputs:
    azureSubscription: ${{ parameters.serviceConnection }}
    scriptType: bash
    scriptLocation: inlineScript
    inlineScript: |
     az deployment sub create \
     --name "esml-cmn$(dev_test_prod)$(admin_aifactorySuffixRG)$(admin_commonResourceSuffix)$(admin_location)-Subnets" \
     --subscription "$(dev_test_prod_sub_id)" \
     --location "$(admin_location)" \
     --template-file "esml-common\main\12-networkCommon.bicep" \
     --parameters aifactorySuffixRG="$(admin_aifactorySuffixRG)" \
     --parameters commonRGNamePrefix="$(admin_aifactoryPrefixRG)" \
     --parameters locationSuffix="$(admin_locationSuffix)" \
     --parameters location="$(admin_location)" \
     --parameters tags='$(tags)' \
     --parameters commonResourceSuffix="$(admin_commonResourceSuffix)" \
     --parameters vnetNameBase="$(vnetNameBase)" \
     --parameters commonResourceName="$(vnetResourceGroupBase)" \
     --parameters common_subnet_name="$(common_subnet_name)" \
     --parameters vnetResourceGroup_param="$(vnetResourceGroup_param)" \
     --parameters vnetNameFull_param="$(vnetNameFull_param)" \
     --parameters commonResourceGroup_param="$(commonResourceGroup_param)" \
     --parameters datalakeName_param="$(datalakeName_param)" \
     --parameters kvNameFromCOMMON_param="$(kvNameFromCOMMON_param)" \
     --parameters useCommonACR="$(useCommonACR_override)" \
     --parameters subnetCommon="$(subnetCommon)" \
     --parameters subnetCommonScoring="$(subnetCommonScoring)" \
     --parameters subnetCommonPowerbiGw="$(subnetCommonPowerbiGw)" \
     --parameters subnetProjGenAI="$(subnetProjGenAI)" \
     --parameters subnetProjAKS="$(subnetProjAKS)" \
     --parameters subnetProjACA="$(subnetProjACA)" \
     --parameters subnetProjDatabricksPublic="$(subnetProjDatabricksPublic)" \
     --parameters subnetProjDatabricksPrivate="$(subnetProjDatabricksPrivate)" \
     --parameters byoASEv3="$(byoASEv3)" \
     --parameters byoAseFullResourceId="$(byoAseFullResourceId)" \
     --parameters byoAseAppServicePlanResourceId="$(byoAseAppServicePlanResourceId)" \
     --parameters common_vnet_cidr="$(common_vnet_cidr)" \
     --parameters common_subnet_cidr="$(common_subnet_cidr)" \
     --parameters common_subnet_scoring_cidr="$(common_subnet_scoring_cidr)" \
     --parameters common_pbi_subnet_name="$(common_pbi_subnet_name)" \
     --parameters common_pbi_subnet_cidr="$(common_pbi_subnet_cidr)" \
     --parameters common_bastion_subnet_name="$(common_bastion_subnet_name)" \
     --parameters common_bastion_subnet_cidr="$(common_bastion_subnet_cidr)" \
     --parameters env="$(dev_test_prod)" \
     --parameters cidr_range="$(cidr_range)" \
     --parameters IPwhiteList="$(project_IP_whitelist)" \
     --debug
    workingDirectory: '$(System.DefaultWorkingDirectory)/azure-enterprise-scale-ml/environment_setup/aifactory/bicep'

- task: AzureCLI@2
  displayName: '03_az_bicep_deploy_resources'
  inputs:
    azureSubscription: ${{ parameters.serviceConnection }}
    scriptType: bash
    scriptLocation: inlineScript
    inlineScript: |
     az deployment sub create \
     --name "esml-cmn-$(dev_test_prod)$(admin_locationSuffix)$(admin_aifactorySuffixRG)$(admin_commonResourceSuffix)$(admin_location)-DeplRes" \
     --subscription "$(dev_test_prod_sub_id)" \
     --location "$(admin_location)" \
     --template-file "esml-common\main\13-rgLevel.bicep" \
     --parameters adminPassword="$(date +%s | sha256sum | base64 | head -c 32 ; echo)" \
     --parameters aifactorySuffixRG="$(admin_aifactorySuffixRG)" \
     --parameters commonRGNamePrefix="$(admin_aifactoryPrefixRG)" \
     --parameters locationSuffix="$(admin_locationSuffix)" \
     --parameters location="$(admin_location)" \
     --parameters tags='$(tags)' \
     --parameters commonResourceSuffix="$(admin_commonResourceSuffix)" \
     --parameters vnetNameBase="$(vnetNameBase)" \
     --parameters common_subnet_name="$(common_subnet_name)" \
     --parameters resourceSuffix="$(admin_prjResourceSuffix)" \
     --parameters commonLakeNamePrefixMax8chars="$(commonLakeNamePrefixMax8chars)" \
     --parameters hybridBenefit="$(admin_hybridBenefit)" \
     --parameters addBastionHost="$(addBastionHost)" \
     --parameters lakeContainerName="$(lakeContainerName)" \
     --parameters adminUsername="$(adminUsername)" \
     --parameters IPwhiteList="$(project_IP_whitelist)" \
     --parameters centralDnsZoneByPolicyInHub="$(centralDnsZoneByPolicyInHub)" \
     --parameters privDnsSubscription_param="$(privDnsSubscription_param)" \
     --parameters privDnsResourceGroup_param="$(privDnsResourceGroup_param)" \
     --parameters tenantId="$(tenantId)" \
     --parameters databricksOID="$(databricksOID)" \
     --parameters enableAdminVM="$(enableAdminVM)" \
     --parameters vnetResourceGroup_param="$(vnetResourceGroup_param)" \
     --parameters vnetNameFull_param="$(vnetNameFull_param)" \
     --parameters commonResourceGroup_param="$(commonResourceGroup_param)" \
     --parameters datalakeName_param="$(datalakeName_param)" \
     --parameters kvNameFromCOMMON_param="$(kvNameFromCOMMON_param)" \
     --parameters useCommonACR="$(useCommonACR_override)" \
     --parameters subnetCommon="$(subnetCommon)" \
     --parameters subnetCommonScoring="$(subnetCommonScoring)" \
     --parameters subnetCommonPowerbiGw="$(subnetCommonPowerbiGw)" \
     --parameters subnetProjGenAI="$(subnetProjGenAI)" \
     --parameters subnetProjAKS="$(subnetProjAKS)" \
     --parameters subnetProjACA="$(subnetProjACA)" \
     --parameters subnetProjDatabricksPublic="$(subnetProjDatabricksPublic)" \
     --parameters subnetProjDatabricksPrivate="$(subnetProjDatabricksPrivate)" \
     --parameters byoASEv3="$(byoASEv3)" \
     --parameters byoAseFullResourceId="$(byoAseFullResourceId)" \
     --parameters byoAseAppServicePlanResourceId="$(byoAseAppServicePlanResourceId)" \
     --parameters inputKeyvault="$(admin_bicep_kv_fw)" \
     --parameters inputKeyvaultSubscription="$(admin_bicep_input_keyvault_subscription)" \
     --parameters inputKeyvaultResourcegroup="$(admin_bicep_kv_fw_rg)" \
     --parameters inputCommonSPIDKey="$(inputCommonSPIDKey)" \
     --parameters inputCommonSPSecretKey="$(inputCommonSPSecretKey)" \
     --parameters commonServicePrincipleOIDKey="$(commonServicePrincipleOIDKey)" \
     --parameters env="$(dev_test_prod)" \
     --parameters technicalAdminsObjectID="$(technical_admins_ad_object_id)" \
     --parameters technicalAdminsEmail="$(technical_admins_email)" \
     --parameters keyvaultSoftDeleteDays="$(admin_keyvaultSoftDeleteDays)" \
     --parameters BYO_subnets="$(BYO_subnets)" \
     --parameters network_env="$(network_env_dev)" \
     --parameters acr_adminUserEnabled="$(acr_adminUserEnabled)" \
     --parameters acr_dedicated="$(acr_dedicated)" \
     --parameters containerRegistrySkuName="$(acr_SKU)" \
     --parameters network_env="$(network_env)" \
     --parameters enablePublicAccessWithPerimeter="$(enablePublicAccessWithPerimeter)" \
     --parameters commonResourceName="$(vnetResourceGroupBase)" \
     --debug
    workingDirectory: '$(System.DefaultWorkingDirectory)/azure-enterprise-scale-ml/environment_setup/aifactory/bicep'