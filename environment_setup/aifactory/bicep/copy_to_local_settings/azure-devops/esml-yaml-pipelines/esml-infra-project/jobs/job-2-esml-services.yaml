steps:

- checkout: self # Required as first property. Alias of the repository resource to check out or 'none'. 
  submodules: true # set to 'true' for a single level of submodules or 'recursive' to get submodules of submodules. Default is not to fetch submodules.
  continueOnError: false # Continue running even on failure?.  (false,n,no,off,on,true,y,yes)
  displayName: GIT # Human-readable name for the task. 
  enabled: true # Run this task when the job runs?.  (false,n,no,off,on,true,y,yes)
  name: GIT # ID of the step.  ([-_A-Za-z0-9]*)

- task: AzureCLI@2
  displayName: '00_pwsh_print_info'
  inputs:
    azureSubscription: ${{ parameters.serviceConnection }}
    scriptType: pscore
    scriptLocation: inlineScript
    inlineScript: |
      Write-Host "project_number_000 is: $(project_number_000)"
      Write-Host "admin_projectType is: $(admin_projectType)"
      Write-Host "dev_test_prod is: $(dev_test_prod)"
      Write-Host "dev_service_connection is: ${{ parameters.serviceConnection }}"
- task: AzureCLI@2
  displayName: '01_pwsh_get_IP_for_ADO_agent'
  inputs:
    azureSubscription: ${{ parameters.serviceConnection }}
    scriptType: ps
    scriptLocation: 'inlineScript'
    inlineScript: |
     $resp = Invoke-RestMethod http://ipinfo.io/json | Select -exp ip
     Write-Host $resp
     Write-Host "##vso[task.setvariable variable=admin_ip_fw]$resp"
     $ipAddr = $resp
     Write-Host "ipAddr is: $(admin_ip_fw) or $ipAddr"
- task: AzureCLI@2
  displayName: '02_az_set_ip_to_seeding_keyvault_FW_whitelist'
  inputs:
    azureSubscription: ${{ parameters.serviceConnection }}
    scriptType: bash
    scriptLocation: 'inlineScript'
    inlineScript: 'az keyvault network-rule add --resource-group $(admin_bicep_kv_fw_rg) --name $(admin_bicep_kv_fw) --ip-address $(admin_ip_fw)'

- task: AzureKeyVault@2
  displayName: '03_az_download_seeding_keyvault'
  inputs:
    azureSubscription: ${{ parameters.serviceConnection }}
    KeyVaultName: '$(admin_bicep_kv_fw)'

- task: AzureCLI@2
  displayName: '04_pwsh_fetch_network_parameters'
  inputs:
    azureSubscription: ${{ parameters.serviceConnection }}
    scriptType: pscore
    scriptPath: '$(System.DefaultWorkingDirectory)/azure-enterprise-scale-ml/environment_setup/aifactory/bicep/scripts/genDynamicNetworkParamFile.ps1'
    arguments: '-spObjId "$(esml-common-bicep-sp-id)" -spSecret "$(esml-common-bicep-sp-secret)" -useServicePrincipal -bicepPar1 "../../../../../aifactory/parameters/10-esml-globals-1.json" -bicepPar2 "../../../../../aifactory/parameters/10-esml-globals-2-12_13_21_22.json" -bicepPar3 "../../../../../aifactory/parameters/10-esml-globals-4-13_21_22.json" -bicepPar4 "../../../../../aifactory/parameters/21-22-esml-prj-parameters.json" -bicepPar5 "../../../../../aifactory/parameters/10-esml-globals-override.json" -filePath "../../../../../aifactory/parameters/" -env "$(dev_test_prod)" -locationSuffixADO "$(admin_locationSuffix)" -aifactorySuffixRGADO "$(admin_aifactorySuffixRG)" -projectNumber "$(project_number_000)" -subscriptionId "$(dev_test_prod_sub_id)" -commonRGNamePrefixVar "$(admin_aifactoryPrefixRG)" -projectTypeADO "$(admin_projectType)"'
    workingDirectory: '$(System.DefaultWorkingDirectory)/azure-enterprise-scale-ml/environment_setup/aifactory/bicep/scripts'

- task: AzureCLI@2
  displayName: '05_az_bicep_deploy_esml_project'
  inputs:
    azureSubscription: ${{ parameters.serviceConnection }}
    scriptType: bash
    scriptLocation: 'inlineScript'
    inlineScript: |
     az deployment sub create \
     --name "esml-p$(project_number_000)-$(dev_test_prod)-$(admin_locationSuffix)-$(admin_prjResourceSuffix)$(admin_commonResourceSuffix)$PrjDepl" \
     --subscription "$(dev_test_prod_sub_id)" \
     --location "$(admin_location)" \
     --template-file "esml-project\22-main.bicep" \
     --parameters adminPassword="$(date +%s | sha256sum | base64 | head -c 32 ; echo)" \
     --parameters @"..\..\..\..\aifactory\parameters\10-esml-globals-1.json" \
     --parameters @"..\..\..\..\aifactory\parameters\10-esml-globals-2-12_13_21_22.json" \
     --parameters @"..\..\..\..\aifactory\parameters\10-esml-globals-3-12_13.json" \
     --parameters @"..\..\..\..\aifactory\parameters\10-esml-globals-4-13_21_22.json" \
     --parameters @"..\..\..\..\aifactory\parameters\10-esml-globals-5-13_23.json" \
     --parameters @"..\..\..\..\aifactory\parameters\10-esml-globals-override.json" \
     --parameters @"..\..\..\..\aifactory\parameters\21-22-esml-prj-parameters.json" \
     --parameters @"..\..\..\..\aifactory\parameters\dynamicNetworkParams.json" \
     --parameters @"..\..\..\..\aifactory\parameters\23-esml-prj-rbac-parameters.json" \
     --parameters env="$(dev_test_prod)" \
     --parameters projectNumber="$(project_number_000)" \
     --parameters technicalAdminsObjectID="$(technical_admins_ad_object_id)" \
     --parameters technicalAdminsEmail="$(technical_admins_email)" \
     --parameters location="$(admin_location)" \
     --parameters locationSuffix="$(admin_locationSuffix)" \
     --parameters resourceSuffix="$(admin_prjResourceSuffix)" \
     --parameters aifactorySuffixRG="$(admin_aifactorySuffixRG)" \
     --parameters commonRGNamePrefix="$(admin_aifactoryPrefixRG)" \
     --parameters commonResourceSuffix="$(admin_commonResourceSuffix)" \
     --parameters projectServicePrincipleOID_SeedingKeyvaultName="$(project_service_principal_OID_seeding_kv_name)" \
     --parameters projectServicePrincipleAppID_SeedingKeyvaultName="$(project_service_principal_AppID_seeding_kv_name)" \
     --parameters projectServicePrincipleSecret_SeedingKeyvaultName="$(project_service_principal_Secret_seeding_kv_name)" \
     --parameters inputKeyvault="$(admin_bicep_kv_fw)" \
     --parameters inputKeyvaultResourcegroup="$(admin_bicep_kv_fw_rg)" \
     --parameters inputKeyvaultSubscription="$(admin_bicep_input_keyvault_subscription)" \
     --parameters aks_dev_sku_override="$(admin_aks_gpu_sku_dev_override)" \
     --parameters aks_test_prod_sku_override="$(admin_aks_gpu_sku_test_prod_override)" \
     --parameters aks_dev_nodes_override="$(admin_aks_nodes_dev_override)" \
     --parameters aks_test_prod_nodes_override="$(admin_aks_nodes_testProd_override)" \
     --parameters aks_version_override="$(admin_aks_version_override)" \
     --parameters aml_cluster_dev_sku_override="$(admin_aml_cluster_sku_dev_override)" \
     --parameters aml_cluster_test_prod_sku_override="$(admin_aml_cluster_sku_testProd_override)" \
     --parameters aml_cluster_dev_nodes_override="$(admin_aml_cluster_maxNodes_dev_override)" \
     --parameters aml_cluster_test_prod_nodes_override="$(admin_aml_cluster_maxNodes_testProd_override)" \
     --parameters aml_ci_dev_sku_override="$(admin_aml_computeInstance_dev_sku_override)" \
     --parameters aml_ci_test_prod_sku_override="$(admin_aml_computeInstance_testProd_sku_override)" \
     --parameters IPwhiteList="$(project_IP_whitelist)"
    workingDirectory: '$(System.DefaultWorkingDirectory)/azure-enterprise-scale-ml/environment_setup/aifactory/bicep'

- task: AzureCLI@1
  displayName: '06_az_remove_ip_from_seeding_keyvault_FW_whitelist'
  inputs:
    azureSubscription: ${{ parameters.serviceConnection }}
    scriptLocation: 'inlineScript'
    inlineScript: 'az keyvault network-rule remove --resource-group $(admin_bicep_kv_fw_rg) --name $(admin_bicep_kv_fw) --ip-address $(admin_ip_fw)'
  condition: always()