variables:
  # ============================================================================
  # #### DO NOT TOUCH ####
  # ============================================================================
  admin_ip_fw: "" # Leave this. Will be set by pipeline
  # ============================================================================
  # #### END - DO NOT TOUCH####
  # ============================================================================

  # ============================================================================
  # MANDATORY(CHANGE ONCE) - UPDATING submodule RELEASE version
  # If you want to upgrade the AIFactory (Long Term Support branches exists)
  # E.g. if you go from submodule RELEASE_BRANCH_120_LTS to RELEASE_BRANCH_121_LTS your AIFactory will be upgraded to 1.21 (add new private dns zones, etc)
  # ============================================================================
  aifactory_version_major: "1" # Major version of AI Factory. Used to determine which bicep files to use. 1, 2, etc.
  aifactory_version_minor: "22" # # 2025-05-23: 120_LTS

  # ============================================================================
  # MANDATORY(CHANGE ONCE)
  # ============================================================================
  tags: '{"Environment":"$(dev_test_prod)","Project":"AIFactory","Owner":"$(technical_admins_email)","CostCenter":"TODO"}'
  admin_location: "eastus2"
  admin_locationSuffix: "eus2"
  admin_aiSearchTier: "standard" # ['free', 'basic', 'standard', 'standard2', 'standard3', 'storage_optimized_l1', 'storage_optimized_l2']
  admin_semanticSearchTier: "disabled" # ['disabled', 'free', 'standard']
  admin_aifactoryPrefixRG: "mrvel-1-" # Max 6 characters. <company>-<aifactoryname-> Examples: ["acme-ai-", "mrvel-1-", "contoso-", "ms-ai-"]
  admin_bicep_input_keyvault_subscription: "TODO_SubID" # seeding keuvyalt, subscription id
  admin_bicep_kv_fw_rg: "TODO_ResourceGourp" # Resource Group name for seeding Keyvault
  admin_bicep_kv_fw: "TODO_Name" # Keyvault name. Purpose: to store secrets with names mapped to PROJECT_SERVICE_PRINCIPAL_KV_S_NAME_APPID,...
  useCommonACR: true # Use common Azure Container Registry (save cost), instead of each project having its own.
  admin_hybridBenefit: "true"
  admin_keyvaultSoftDeleteDays: 7 # 90 days is default. 7 lowest. 0 is disabled. 90 days is recommended.
  azure_machinelearning_sp_oid: "TODO_ObjectID" # Azure Machine Learning service principle Object ID. Find it in Entra ID called "Azure Machine Learning" with AppId:0736f41a-0425-4b46-bdb5-1563eff02385
  use_ad_groups: "true" # true, use AD groups for project members & advanced Personas. false, use individual ObjectID's and simple mode Personas

  # ============================================================================
  # OPTIONALLY (CHANGE ONCE) - Naming convention, on resource group
  # 
  # ============================================================================
  projectPrefix: '' # mrvel-1-[esml-]project001-eus2-dev-008-rg "" -> mrvel-1-project001-eus2-dev-008-rg
  projectSuffix: '' # mrvel-1-esml-project001-eus2-dev-008[-rg] -> mrvel-1-project001-eus2-dev-008

  # ============================================================================
  # MANDATORY(CHANGE ONCE):BASE PARAMETERS: v1.22 updates: Moved from .json to this YAML
  # ============================================================================
  vnetNameBase: "vnt-esmlcmn"
  vnetResourceGroupBase: "esml-common"
  common_subnet_name: "snet-esml-cmn-001"
  commonLakeNamePrefixMax8chars: "mrvel"
  lakeContainerName: "lake3"
  adminUsername: "esmladmin"
  centralDnsZoneByPolicyInHub: "false"
  privDnsSubscription_param: "TODO_SubID"
  privDnsResourceGroup_param: "TODO_rg_name"
  tenantId: "TODO_tenantId"
  databricksOID: "TODO_ObjectID"
  databricksPrivate: "false"
  AMLStudioUIPrivate: "true"
  inputCommonSPIDKey: "esml-common-sp-id"
  inputCommonSPSecretKey: "esml-common-sp-secret"
  commonServicePrincipleOIDKey: "esml-common-sp-oid"
   
  # ============================================================================
  # MANDATORY(CHANGE ONCE): Azure Devops
  # ============================================================================
  # Azure DevOps - Service Connections for task subscription
  dev_service_connection: "todo_ado_service_connection" # Name of service connection for DEV Azure subscription
  test_service_connection: "todo_ado_service_connection" # Name of service connection TEST Azure subscription
  prod_service_connection: "todo_ado_service_connection" # Name of service connection PROD Azure subscription
  # Azure DevOps - Service Connections for seeding keyvault, that may be in another subscription
  dev_seeding_kv_service_connection: "todo_ado_service_connection" # Name of service connection for DEV Azure subscription where the seeding keuvauly resides. May be same as: dev_service_connection
  test_seeding_kv_service_connection: "todo_ado_service_connection" # Name of service connection for TEST Azure subscription. May be same as: test_service_connection
  prod_seeding_kv_service_connection: "todo_ado_service_connection" # Name of service connection for PROD Azure subscription. May be same as: prod_service_connection
  # ============================================================================
  # MANDATORY(CHANGE RARELY):NETWORKING: Networking modes
  #  [false, false, false ] = private UI with private backend. No public IP (Bastion host + VM, Azure VPN, Peering)
  #  [true, true, false ]  = public UI for IP whitelisted devices, with private backend
  #  [true, true, true ]   = public UI with private backend 
  # ============================================================================
  enablePublicGenAIAccess: "false"
  allowPublicAccessWhenBehindVnet: "false"
  enablePublicAccessWithPerimeter: "false"

  # ============================================================================
  # MANDATORY(CHANGE RARELY):RBAC restrictions
  # ============================================================================
  disableContributorAccessForUsers: "false"
  disableRBACAdminOnRGForUsers: "false"
  # ============================================================================
  # MANDATORY(CHANGE RARELY):Client Access: Services to be added to deployment. CreateIfNotExists logic
  # ============================================================================
  addBastionHost: "false" # COMMON resource group
  enableAdminVM: "false" # COMMON resource group
  
  # ============================================================================
  # MANDATORY(CHANGE RARELY): AI Factory scale set.
  # WHAT: 
  # - If you want to have a new AIFactory subscription & vNet per team/dept/project
  # - If you want to have multiple AIFactory's in same regions, multiple projects for team
  # More info: https://github.com/jostrm/azure-enterprise-scale-ml/blob/main/documentation/v2/10_index.md#40-faq
  # ============================================================================
  admin_aifactorySuffixRG: "-001" #<-XXX> Change for AIFactory scale set, or if you have mutliple AIFactory's in same regions: Examples: ["-001", "-002", "-003"]
  # ============================================================================
  # MANDATORY(CHANGE RARELY): Environments: Dev, Stage, Prod per AI Factory scaleset
  # ============================================================================
  dev_sub_id: "TODO_SubID" # SubscriptionID dev
  test_sub_id: "TODO_SubID" # SubscriptionID test
  prod_sub_id: "TODO_SubID" # SubscriptionID prod
  # ============================================================================
  # MANDATORY(CHANGE RARELY): Networking per environment and AI Factory scaleset
  # ============================================================================
      # NOTE: When supplying an agent subnet, the AI Foundry Account will automatically create a capability host for the agent service.
      # NB! In that case, Provided subnet must be in address space in the range of 172.16.0.0/12 or 192.168.0.0/16 (class B or C). And delegated to: Microsoft.App/environment
      # - Read more about Agent Network Injection, and known limitations: https://learn.microsoft.com/en-us/azure/ai-foundry/agents/how-to/virtual-networks?WT.mc_id=Portal-Microsoft_Azure_ProjectOxford
      # 10.x.x.x (/8) is heavily used for IoT and machine learning (e.g., HVAC, AV, VoIP, ML-clusters)
        # Example vnet 10.16.0.0/16 with subets [10.XX.0.0/20,172.XX.16.0/20,10.XX.32.0/25,10.XX.33.0/26]
      # 172.x.x.x (/12)is often used for hosted systems and backend platforms, especially in Azure and hybrid setups
        # Example vnet 172.16.0.0/16 with subets [172.16.XX.0/26,172.16.XX.64/26,172.16.XX.128/26,172.16.XX.192/26]
      # 192.x.x.x  (/16) is less commonly used in large-scale Azure deployments due to its smaller address space.
      # WAF AI Factory Recommended: 172.16.0.0/16
  common_vnet_cidr: "172.16.0.0/16"

  common_subnet_cidr: "172.16.XX.0/26"
  common_subnet_scoring_cidr: "172.16.XX.64/26"
  
  common_pbi_subnet_name: "snet-esml-cmn-pbi-001"
  common_pbi_subnet_cidr: "172.16.XX.128/26"
  
  common_bastion_subnet_name: "AzureBastionSubnet"
  common_bastion_subnet_cidr: "172.16.XX.192/26"

  dev_cidr_range: "61" # CIDR range for each environment vNet, that will replace XX in the CIDR template: 172.16.XX.0/24
  test_cidr_range: "62"
  prod_cidr_range: "63"

## ============================================================================
## START - FOR EACH PROJECT (MANDATORY), PRE SETUP
## ============================================================================
  project_service_principal_AppID_seeding_kv_name: "esml-project001-sp-id" # Service principle ID, name from seeding keuvalt (need to be from enterprise application)
  project_service_principal_OID_seeding_kv_name: "esml-project001-sp-oid" # Service principle Object ID, name from seeding keuvalt (need to be from enterprise application)
  project_service_principal_Secret_seeding_kv_name: "esml-project001-sp-secret" # Service principle secret, name from seeding keuvalt
  admin_projectType: "genai-1" # Azure Devops: What project type to deploy? [esml,genai-1,genai-2] to fetch subnets from Bicep deployment.
  project_number_000: "001" # Project number (3 digits in a string) <000> Example "001"
  tag_costcenter: "1234"
  tagsProject: '{"CostCenter":"$(tag_costcenter)","Description":"RAG Chat 1","AIF-Environment":"$(dev_test_prod)","AIF-Project Owners":"$(technical_admins_email)","AIFactory project":"$(project_number_000)","AIF-Networking":"$(allowPublicAccessWhenBehindVnet),$(enablePublicGenAIAccess),$(enablePublicAccessWithPerimeter)","AIF-enableAIFactoryCreatedDefaultProjectForAIFv2":"$(enableAIFactoryCreatedDefaultProjectForAIFv2)","AIF-disableAgentNetworkInjection":"$(disableAgentNetworkInjection)","AIF-byoASEv3":"$(byoASEv3)","AIF-BYO_subnets":"$(BYO_subnets)"}'
  project_IP_whitelist: "" # IP (IPv4) adresses in a commas separated list, without space, to whitelist to acccess UI in Azure. "10.123.456.10,124.56.78.0/24"
  
  # Container registry
  acr_IP_whitelist: "" # Selected networks approved IPs
  acr_adminUserEnabled: "false" # true, enable admin user. false, disable admin user (more secure)
  acr_dedicated: "true" # Premium only
  acr_SKU: "Premium" # Premium is mandatory, to enable private endpoints

  technical_admins_ad_object_id: "TODO_EntraID_ObjectID" # TODO_EntraID_ObjectID commaseparated list, or just 1 ObjectID
  technical_admins_email: "TODO_email_or_securitygroup_name" # email or name of AD group
  serviceSettingDeployProjectVM: "false" # VM Project resource group, to use with BASTION

  # ============================================================================
  # MANDATORY (PRE SETUP of a PROJECT): AI Factory salt frp, COMMON RG
  # ============================================================================
  # Description: aifactory_salt:""(default) [5 chars] 
  # What: 
  #   A deteministic unique value unique for the AIFactory environment. Same for all projects.
  # How to find it: 
  #   Update with values from AI Factory COMMON Resource group.
  #   The aifactory_salt can be read from the AI Factory common resource group in names of services such as Azure Datafactory
  #   Example: the 'a4c2b'in "adf-cmn-weu-dev-a4c2b-001" and in Container registry, private endpoints: "pend-kv-cmndev-a4c2b-001-to-vnt-esmlcmn"
  # Usage: aifactory_salt will be used in Project resource groups 'abcde' for resources such as Managed Identity  'mi-aca-prj001-sdc-dev-abcde19-2858-4a-001'
  # ============================================================================
  
  aifactory_salt: "" # 5 characters.  A deteministic unique value, from COMMON RG

  # ============================================================================
  # MANDATORY:Services to be added to deployment. CreateIfNotExists logic
  # ============================================================================
  # ============================================================================
  # Example 01 Demo Scenario Standalone: AI Layer (RAG: AI foundry, AI Search)
  # - Services: enableAIFoundryHub, enableAISearch, serviceSettingDeployFunction, serviceSettingDeployContainerApps, serviceSettingDeployAppInsightsDashboard, serviceSettingDeployCosmosDB
  # - Networking (IPwhitelist UX access + private endpoints service-service):   enablePublicGenAIAccess, allowPublicAccessWhenBehindVnet
  # Example 02 Demo Scenario Standalone: DB layer - AI layer - App layer
  # - Services: enableAIFoundryHub, enableAISearch, serviceSettingDeployFunction, serviceSettingDeployContainerApps, serviceSettingDeployAppInsightsDashboard, serviceSettingDeployCosmosDB
  # - Networking (IPwhitelist UX access + private endpoints service-service):   enablePublicGenAIAccess, allowPublicAccessWhenBehindVnet
  # ============================================================================
  
  # AI Foundry 2023-2025+
  enableAIServices: "true" # Standalone AI Services acount with Azure OpenAI endpoint, and endpoint to other models in AI Foundry model catalogue
  enableAIFoundryHub: "true" # AI Foundry Hub service, with default project. Requires: enableAIServices: "true" 

  # AI Foundry 2025->
  enableAIFoundryV21: "true" # Enterprise grade implemenetation (private networking, BYOvNet, exising infra). GA.
  updateAIFoundryV21: "false" # Enables you to update AI Foundry properties and its RBAC, running the pipeline twice. false meand "CreateIfNotExists"
  addAIFoundryV21: "false" # Add new AI foundry with project, with a new random name (can be used for debugging, or running pipeline twice directly, not wating for deletion)
  enableAFoundryCaphost: "false" # Ensures Agents metadata, and history/threads is saved in your subscription and network, using CosmosDB, Storage, AI Search
  enableAIFactoryCreatedDefaultProjectForAIFv2: "true" # true, only connections is created to AIFactory created services. false, Azure will create a default project, with additional CosmosDB, Storage Account, AI Search, and connections
  disableAgentNetworkInjection: "true" # If false, NB! requires your Container apps subnet (snt-prj001-aca) needs to be in either 172.16.0.0/12 or 192.168.0.0/16 (class B or C).
  # AI Foundry 2025, END

  # More info: disableAgentNetworkInjection: Known agent functional limitations, if false: Azure Blob Storage: using Azure Blob Storage files with the File Search tool isn't supported.
  # Read more about Agent Network Injection, and known limitations: https://learn.microsoft.com/en-us/azure/ai-foundry/agents/how-to/virtual-networks?WT.mc_id=Portal-Microsoft_Azure_ProjectOxford
    
  enableAISearch: "true"
  enableAzureMachineLearning: "false" # TODO: AML, Databricks, ADF, EventHubs
  serviceSettingDeployAzureOpenAI: "false"
  serviceSettingDeployAzureAIVision: "false"
  serviceSettingDeployAzureSpeech: "false"
  serviceSettingDeployAIDocIntelligence: "false"
  serviceSettingDeployCosmosDB: "true" # true, if creating an own Capability host (enableAFoundryCaphost; "true"), then it is needed for AI Foundry V2 project, agents.
  cosmosKind: "GlobalDocumentDB" # "MongoDB", "GlobalDocumentDB"
  serviceSettingDeployPostgreSQL: "false"
  serviceSettingDeployRedisCache: "false"
  serviceSettingDeploySQLDatabase: "false"
  
  serviceSettingDeployFunction: "false"
  functionRuntime: "dotnet"
  functionVersion: "v7.0"
  
  serviceSettingDeployWebApp: "false"
  webAppRuntime: "python"
  webAppRuntimeVersion: "3.11"
  aseSku: "IsolatedV2"
  aseSkuCode: "I1v2"
  aseSkuWorkers: 1
  
  serviceSettingDeployContainerApps: "false"
  serviceSettingDeployAppInsightsDashboard: "false"
  aca_a_registry_image: # "containerapps-default:latest"
  aca_w_registry_image: #"mcr.microsoft.com/azuredocs/containerapps-helloworld:latest"
    
  # ============================================================================
  # MANDATORY (POST SETUP of a PROJECT): aifactory_salt_random
  # ============================================================================
  # Description: aifactory_salt_random:""(default) [10 chars]
  # What: 
  #   A deteministic unique value unique for the AIFactory environment, based on the Common RG name.
  # How to find it: "User created Managed Identity" to find this value post creation, '19x2858d4a' in 'mi-aca-prj001-sdc-dev-abcde19x2858d4a-001'
  # Usage: A non-deterministic value globally unique
  # ============================================================================
  
  # Look at the "User created Managed Identity". It is a unique random value. This '19x2858d4a' in that: 'mi-aca-prj001-sdc-dev-abcde19x2858d4a-001'
  aifactory_salt_random: "" # 10 characters. Look at the "User created Managed Identity". It is a unique random value. This '19x2858d4a' in that: 'mi-aca-prj001-sdc-dev-abcde19x2858d4a-001'
  
  # ============================================================================
  # MANDATORY (POST SETUP of a PROJECT): runNetworkingVar
  # ============================================================================
  # Description: runNetworkingVar:"true"(default) 
  #  Set to true when creating a new project, "false" to UPDATE or ADD services
  # ============================================================================
  runNetworkingVar: "false" # true, when creating a new project. set to false if you want to UPDATE or ADD services to a project. 

## ============================================================================
## END - FOREACH PER PROJECT (MANDATORY)
## ============================================================================
  
  # ============================================================================
  # OPTIONAL(CHANGE ONCE) - Bring your own vNet/subnets (BYO_subnets=true) 
  # Default: leave false and empty strings to disable, and pipeline will create new subnets based on the CIDR
  # ============================================================================
  BYO_subnets: "false" # false, the default subnets created by the pipeline. Azure Devops pipeline, will automatically not run Networking step, if true
  network_env_dev: "tst-" # Default is empty string. Set to empty if  BYO_subnets: "false"
  network_env_stage: "tst2-"
  network_env_prod: "prd-"

  # ============================================================================
  # OPTIONAL: ENTRA ID SECURITY GROUPS - Object ID to PERSONAS
  # Personas 001-010 are reserved for ESML, 011-020 for GenAI-1, 021-030 for GenAI-2
  # Personas 080-090 for CoreTeam. 100-110 for Service Principals.
  # ============================================================================
  
  # EntraID group names
  groups_project_members_esml: "<aif001sdc_prj001_team_lead_p001>,<aif001sdc_prj001_team_member_ds_p002>,<aif001sdc_prj001_team_member_fend_p003>" #[GH-Secret] 3 groups of users. All except p001 group can be empty groups. ObjectID for Entra ID security groups in a commas separated list, without space
  groups_project_members_genai_1: "<aif001sdc_prj002_team_lead_p011>,<aif001sdc_prj002_genai_team_member_aifoundry_p012>,<aif002sdc_prj001_genai_team_member_agentic_p013>,<aif001sdc_prj001_genai_team_member_dataops_p014>,<aif001sdc_prj001_team_member_fend_p015>" #[GH-Secret] 5 groups. All except p011 can be empty groups. ObjectID for Entra ID security groups in a commas separated list, without space
  groups_coreteam_members: "<aif001sdc_coreteam_admin_p080>,<aif001sdc_coreteam_dataops_p081>,<aif001sdc_coreteam_dataops_fabric_p082>" #[GH-Secret] 3 groups. ll except p080 group can be empty groups. Group ObjectID ObjectID for Entra ID security  in a commas separated list, without space
  # Persona names
  personas_project_esml: "p001_esml_team_lead,p002_esml_team_member_datascientist,p003_esml_team_member_front_end,p101_esml_team_process_ops" # 4 Personas where first 3 contains users. The 4th is of type Service Principal. 3 are mapped to groups_project_members_esml & PROJECT_TYPE=esml
  personas_project_genai_1: "p011_genai_team_lead,p012_genai_team_member_aifoundry,p013_genai_team_member_agentic,p014_genai_team_member_dataops,p015_genai_team_member_frontend,p102_esml_team_process_ops" # 6 Personas where 5 contain users. The 6th is an SP. mapped to groups_project_members_genai_1 & PROJECT_TYPE=genai-1
  personas_core_team: "p080_coreteam_it_admin,coreteam_dataops,p081_coreteam_dataops_fabric, p103_coreteam_team_process_ops" # 4 Personas, whereof first 3 contains useres. The 4th is a service principal. These personas are mapped to group_coreteam_members
  # ============================================================================
  # OPTIONAL: ESML: Azure ML Compute & Performance
  # ============================================================================
  admin_aks_gpu_sku_dev_override: "Standard_B4ms"
  admin_aks_gpu_sku_test_prod_override: "Standard_DS13-2_v2"
  admin_aks_nodes_dev_override: 1
  admin_aks_nodes_testProd_override: 3
  admin_aks_version_override: "1.30.3" # AKS version. SDC: "1.30.3" | EUS: "1.30.3"
  admin_aml_cluster_maxNodes_dev_override: 3
  admin_aml_cluster_maxNodes_testProd_override: 5
  admin_aml_cluster_sku_dev_override: "Standard_DS3_v2"
  admin_aml_cluster_sku_testProd_override: "Standard_D13_v2"
  admin_aml_computeInstance_dev_sku_override: "Standard_DS11_v2" 
  admin_aml_computeInstance_testProd_sku_override: "Standard_ND96amsr_A100_v4"
  # ============================================================================
  # OPTIONAL: GENAI: Default Models to start with.
  # ============================================================================
  deployModel_gpt_X: "false"
  modelGPTXName: "gpt-5-mini"
  modelGPTXVersion: ""
  modelGPTXSku: "DataZoneStandard" # ['Standard','DataZoneStandard','GlobalStandard']
  modelGPTXCapacity: 30 # TPM:Tokens per Minute Rate Limit in K=1000) 30 meaning 30K

  deployModel_text_embedding_ada_002: "true"
  deployModel_text_embedding_3_large: "true"
  deployModel_text_embedding_3_small: "false"
  default_embedding_capacity: 25

  deployModel_gpt_4o_mini: "false"
  default_gpt_4o_mini_version: "2024-07-18" # Note: This model with version '2024-07-18' does not support Bing search grounding in Agents.

  deployModel_gpt_4o: "true"
  default_gpt_4o_version: "2024-11-20" # "2024-08-06", "2024-11-20"

  default_gpt_capacity: 40 # TPM:Tokens per Minute Rate Limit in K=1000) 30 meaning 30K
  default_model_sku: "Standard"  #  ['Standard','DataZoneStandard','GlobalStandard']
  # ============================================================================
  # OPTIONAL: Change if you want to create new resources. Keeps old.
  # ============================================================================
  admin_commonResourceSuffix: "-001" # Only if you want to reprovision new services within same resource group, esml-common. (and don't want to delete the old ones)
  admin_prjResourceSuffix: "-001" # Only if you want to reprovision new services within same resource group, project-specific (and don't want to delete the old ones)

  # ============================================================================
  # OPTIONAL: BYO Overrides: Override AI Factory vanilla - BYOvNet, BYOsnet, BYOAse
  # ============================================================================
  # DOCS_byovnet_example: "esml-common-eus2-<network_env>001-rg"
  vnetResourceGroup_param: ""
  vnetNameFull_param: ""
  commonResourceGroup_param: ""
  datalakeName_param: ""
  kvNameFromCOMMON_param: ""
  useCommonACR_override: "true"
  # DOCS_byosnet_common_example: "acme-<network_env>common-eus2-subnet"
  subnetCommon: ""
  subnetCommonScoring: ""
  subnetCommonPowerbiGw: ""
  # DOCS_byosnet_project_example: "acme-<network_env>prj<xxx>-genai-eus2-subnet"
  subnetProjGenAI: ""
  subnetProjAKS: ""
  subnetProjACA: ""
  subnetProjDatabricksPublic: ""
  subnetProjDatabricksPrivate: ""
  byoASEv3: "false"
  byoAseFullResourceId: "/subscriptions/...yourASEnameS2"
  byoAseAppServicePlanResourceId: ""

  # ============================================================================
  # GenAI-DEBUG - Dont touch: infra AIFactory core team only. 
  # Purpose: To DISABLE full sections (for efficiency, if re-running pipeline)
  # ============================================================================
  debug_disable_05_build_acr_image: "false" # Cannot be disabled if ContainerApps is enabled. It needs ACR  networking with whitelist to Azure Deveops/GHA IPs, that this closes in the end.
  debug_disable_61_foundation: "false" # Resource group, UAMI's, VM
  debug_disable_62_core_infrastructure: "false" # Application Insights, Keyvault, Storage, ACR
  debug_disable_63_cognitive_services: "false" # AI Search, OpenAI Standalone, Vision standalone, Speech standalone, ...
  debug_disable_64_databases: "false" # CosmosDB, SQL Database, ...
  debug_disable_65_compute_services: "false" # ContainerApps, WebApp, FunctionApp
  debug_disable_66_ai_platform: "false" # AI Foundry Hub (V1) with default project, and connections to AISearch, Storage, ...
  debug_disable_67_ml_platform: "true" # Azure Machine Learning, Datafactory, Databricks§
  debug_disable_68_rbac_security: "false" # RBAC for 61-67
  debug_disable_69_aifoundry_2025: "false" # AI Foundry V2, including RBAC, and default project (CosmosDB, Storage)
  debug_disable_10_aifactory_dashboards: "true" # AI Factory Dashboards
  # ============================================================================
  # DEBUG SETTINGS - Error Cleanup Tasks
  # Note: You still need to PURGE AIServices and AI Foundry project (2025) due to soft delete
  # ============================================================================
  debugEnableCleaning: "false" # Enable error cleanup tasks (71-73) that delete resources on deployment failures. Set to "true" to enable cleanup tasks.
  