name: infra-project-genai

on:
    #push:
    workflow_dispatch:
      inputs:
        environment:
          description: 'Github Environment to get variables and secrets from [dev,stage,prod]'
          required: true
          default: 'dev'
env:
    # Flow control
    ENABLE_STEP: 'false' # Enable/Disable a step
    ENABLE_DEBUG_STEP: 'false' # Enable/Disable a step
    ENABLE_NETWORKING_JOB: "${{ vars.RUN_JOB1_NETWORKING }}"
        
    # ADMIN usual culprits - verify, twice. (only configure once)
    admin_bicep_input_keyvault_subscription: "${{ secrets.AIFACTORY_SEEDING_KEYVAULT_SUBSCRIPTION_ID }}" # seeding keyvault, subscription id
    admin_bicep_kv_fw: "${{ vars.AIFACTORY_SEEDING_KEYVAULT_NAME }}" # seeding keyvault, name
    admin_bicep_kv_fw_rg: "${{ vars.AIFACTORY_SEEDING_KEYVAULT_RG }}" #seeding keyvault, resource group
    admin_aifactorySuffixRG: "${{ vars.AIFACTORY_SUFFIX }}"  #"-002"
    admin_aifactoryPrefixRG: "${{ vars.AIFACTORY_PREFIX }}"  # <company>-<aifactoryname> Examples: ["acme-ai-", "mrvel-1-", "contoso-", "ms-ai-"]
    common-sp-appid-seeding-kv-name: "esml-common-bicep-sp-id"
    common-sp-secret-seeding-kv-name: "esml-common-bicep-sp-secret"
    admin_hybridBenefit: false # Enable Hybrid Benefits if provisioning VM access via Bastion
    admin_commonResourceSuffix: "-001"
    admin_prjResourceSuffix: "-001"

    # ADMIN specific START (only configure once)
    admin_ip_fw: "192.x.x.x" # Do not touch. leave as-is. This is just a placeholder a script will populate later.
    admin_location: "${{ vars.AIFACTORY_LOCATION }}"
    admin_locationSuffix: "${{ vars.AIFACTORY_LOCATION_SHORT }}"
    dev_test_prod_sub_id: "${{ vars.AZURE_SUBSCRIPTION_ID }}" # "a1234567-xxxx-xxxx-xxxx-xxxxxxxxxxxx"
    dev_test_prod: "${{ vars.AZURE_ENV_NAME }}" # ESML AIFactory environment: [dev,test,prod]
   
    # PROJECT specific START (configure for each project)
    project_IP_whitelist: "${{ secrets.PROJECT_MEMBERS_IP_ADDRESS }}" # "192.x.x.x"
    technical_admins_ad_object_id: "${{ secrets.PROJECT_MEMBERS }}"  # comma separated list with no spaces: "012345ab-xxxx-xxxx-xxxx-xxxxxxxxxxxx,1234f-af-234-adfssdf,12312-aef23431"
    technical_admins_email: "${{ vars.PROJECT_MEMBERS_EMAILS }}"  # comma separated list
    project_number_000: "${{ vars.PROJECT_NUMBER }}"  # Project number (3 digits), example "003"
    project_service_principal_AppID_seeding_kv_name: "${{ vars.PROJECT_SERVICE_PRINCIPAL_KV_S_NAME_APPID }}" # Service principle ID, name from seeding keyvault (need to be from enterprise application)
    project_service_principal_OID_seeding_kv_name: "${{ vars.PROJECT_SERVICE_PRINCIPAL_KV_S_NAME_OID }}" # Service principle Object ID, name from seeding keyvault (need to be from enterprise application)
    project_service_principal_Secret_seeding_kv_name: "${{ vars.PROJECT_SERVICE_PRINCIPAL_KV_S_NAME_S }}" # Service principle secret, name from seeding keyvault
    
    # PROJECT TYPE specific
    admin_projectType: "genai-1" # Project type, [esml,genai-1]
    useCommonACR: "${{ vars.USE_COMMON_ACR_FOR_PROJECTS }}" # Use common Azure Container Registry (save cost), insted of each project having its own.

    # OPTIONAL - GENAI specific
    admin_enablePublicGenAIAccess: true # Enable public access to GenAI
    optional_serviceSettingDeployAIDocIntelligence: false # Deploy AI Doc Intelligence
    optional_serviceSettingDeployAzureAIVision: false # Deploy Azure AI Vision
    optional_serviceSettingDeployAzureSpeech: false # Deploy Azure Speech
    optional_serviceSettingDeployAzureAppService: false # Deploy Azure App Service and a WebApp
    optional_serviceSettingDeployAzureFunction: false # Deploy Azure App Service and a WebApp
    optional_serviceSettingDeployAzureContainerApps: false # Deploy Azure ContainerApps
    optional_serviceSettingDeployAzureCosmosDB: false # Deploy Azure CosmosDB
    # OPTIONAL - ESML specific
    admin_aks_gpu_sku_dev_override: "Standard_B4ms" # AKS GPU SKU for dev
    admin_aks_gpu_sku_test_prod_override: Standard_DS13-2_v2 # AKS GPU SKU for test/prod
    admin_aks_nodes_dev_override: 1 # AKS nodes for dev
    admin_aks_nodes_testProd_override: 3 # AKS nodes for test/prod
    admin_aks_version_override: "1.30.3" # AKS version
    admin_aml_cluster_maxNodes_dev_override: 3 # AML cluster max nodes for dev
    admin_aml_cluster_maxNodes_testProd_override: 5 # AML cluster max nodes for test/prod
    admin_aml_cluster_sku_dev_override: "Standard_DS3_v2" # AML cluster SKU for dev
    admin_aml_cluster_sku_testProd_override: "Standard_D13_v2" # AML cluster SKU for test/prod
    admin_aml_computeInstance_dev_sku_override: "Standard_DS11_v2" # AML compute instance SKU for dev
    admin_aml_computeInstance_testProd_sku_override: "Standard_ND96amsr_A100_v4" # AML compute instance SKU for test/prod
    admin_private_azureMLStudioUI: true # Private Azure ML Studio UI
    admin_private_DatabricksUI: false # Private Databricks UI
jobs:
  job1-deploy-networking-project-genai:
    name: ESGenAI Networking
    environment: ${{github.event.inputs.environment}}
    runs-on: ubuntu-latest
    if: vars.RUN_JOB1_NETWORKING != 'false'
    defaults:
      run:
        shell: pwsh
        #working-directory: "${{ github.workspace }}/azure-enterprise-scale-ml/environment_setup/aifactory/bicep/scripts/"
    steps:
    - name: Print Skip NETWORKING variable
      run: |
        echo "The value of vars.RUN_JOB1_NETWORKING  is: ${{ vars.RUN_JOB1_NETWORKING }}"
        echo "The value of env.ENABLE_NETWORKING_JOB  is: ${{ env.ENABLE_NETWORKING_JOB }}"
    - name: Azure Login
      if: env.ENABLE_NETWORKING_JOB  != 'false'
      uses: azure/login@v2
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}
        enable-AzPSSession: true
    - name: GIT
      if: env.ENABLE_NETWORKING_JOB  != 'false'
      uses: actions/checkout@v4
      with:
        submodules: true
    - name: 01_pwsh_get_IP_for_GH_runner
      if: env.ENABLE_NETWORKING_JOB  != 'false'
      run: |
        $resp = Invoke-RestMethod http://ipinfo.io/json | Select -exp ip
        echo "runner_ip=$resp" | Out-File -FilePath $Env:GITHUB_ENV -Encoding utf8 -Append
        echo "Environment is (vars.AZURE_ENV_NAME): ${{env.dev_test_prod}}"
      shell: pwsh
    - name: Use environment variable
      if: env.ENABLE_NETWORKING_JOB  != 'false'
      run: |
        echo "The value of runner_ip is: ${{ env.runner_ip }}"
    - name: 02_az_set_ip_to_seeding_keyvault_FW_whitelist
      if: env.ENABLE_NETWORKING_JOB  != 'false'
      uses: azure/cli@v2
      with:
        inlineScript: az keyvault network-rule add --resource-group ${{ env.admin_bicep_kv_fw_rg }} --name ${{ env.admin_bicep_kv_fw }} --ip-address ${{ env.runner_ip }}
        azcliversion: latest
    - name: 03_download_seeding_keyvault
      if: env.ENABLE_NETWORKING_JOB  != 'false'
      uses: azure/cli@v2
      with:
        inlineScript: |
          echo "common-sp-appid-value=$(az keyvault secret show --vault-name ${{ env.admin_bicep_kv_fw }} --name ${{ env.common-sp-appid-seeding-kv-name }} --query 'value' --output tsv)" >> $GITHUB_ENV
          echo "common-sp-secret-value=$(az keyvault secret show --vault-name ${{ env.admin_bicep_kv_fw }} --name ${{ env.common-sp-secret-seeding-kv-name }} --query 'value' --output tsv)" >> $GITHUB_ENV
        azcliversion: latest
    - name: Set permissions 755 on WORKSPACE
      if: env.ENABLE_NETWORKING_JOB  != 'false' && env.ENABLE_DEBUG_STEP == 'true'
      run: chmod -R 755 ${{ github.workspace }}
    - name: Set permissions 757 on scripts
      if: env.ENABLE_NETWORKING_JOB  != 'false' && env.ENABLE_DEBUG_STEP == 'true'
      run: chmod -R 757 ${{ github.workspace }}/azure-enterprise-scale-ml/environment_setup/aifactory/bicep/scripts
    - name: 04A_pwsh_calculate_subnet_allocations
      if: env.ENABLE_NETWORKING_JOB  != 'false'
      working-directory: ${{ github.workspace }}/azure-enterprise-scale-ml/environment_setup/aifactory/bicep/scripts
      run: |
        sudo pwsh -Command  ${{ github.workspace }}/azure-enterprise-scale-ml/environment_setup/aifactory/bicep/scripts/subnetCalc.ps1 -bicepPar1 '../../../../../aifactory/parameters/10-esml-globals-1.json' -bicepPar2 '../../../../../aifactory/parameters/10-esml-globals-2-12_13_21_22.json' -bicepPar3 '../../../../../aifactory/parameters/10-esml-globals-4-13_21_22.json' -bicepPar4 '../../../../../aifactory/parameters/21-22-esml-prj-parameters.json' -bicepPar5 '../../../../../aifactory/parameters/10-esml-globals-override.json' -filePath '../../../../../aifactory/parameters/' -spObjId '${{ env.common-sp-appid-value }}' -spSecret '${{ env.common-sp-secret-value }}' -env '${{ env.dev_test_prod }}' -subscriptionId '${{ env.dev_test_prod_sub_id }}' -prjResourceSuffix '${{ env.admin_prjResourceSuffix }}' -aifactorySuffixRGADO '${{ env.admin_aifactorySuffixRG }}' -commonRGNamePrefixVar '${{ env.admin_aifactoryPrefixRG }}' -commonResourceSuffixADO '${{ env.admin_commonResourceSuffix }}' -locationADO '${{ env.admin_location}}' -locationSuffixADO '${{ env.admin_location_SHORT }}' -projectTypeADO '${{ env.admin_projectType }}' -useServicePrincipal
      shell: pwsh
    - name: 04B_pwsh_calculate_subnet_allocations
      if: env.ENABLE_NETWORKING_JOB  != 'false' && env.ENABLE_DEBUG_STEP == 'true'
      uses: azure/powershell@v2
      #working-directory: "${{ github.workspace }}/azure-enterprise-scale-ml/environment_setup/aifactory/bicep/scripts/"
      with: # Warning: Unexpected input(s) 'working-directory', valid inputs are ['inlineScript', 'azcliversion'] Solution: Set-Location -Path
        inlineScript: |
          sudo pwsh -Command "
            Set-Location -Path '${{ github.workspace }}/azure-enterprise-scale-ml/environment_setup/aifactory/bicep/scripts';
            ./subnetCalc.ps1 -bicepPar1 '../../../../../aifactory/parameters/10-esml-globals-1.json' -bicepPar2 '../../../../../aifactory/parameters/10-esml-globals-2-12_13_21_22.json' -bicepPar3 '../../../../../aifactory/parameters/10-esml-globals-4-13_21_22.json' -bicepPar4 '../../../../../aifactory/parameters/21-22-esml-prj-parameters.json' -bicepPar5 '../../../../../aifactory/parameters/10-esml-globals-override.json' -filePath '../../../../../aifactory/parameters/' -spObjId '${{ env.common-sp-appid-value }}' -spSecret '${{ env.common-sp-secret-value }}' -env '${{ env.dev_test_prod }}' -subscriptionId '${{ env.dev_test_prod_sub_id }}' -prjResourceSuffix '${{ env.admin_prjResourceSuffix }}' -aifactorySuffixRGADO '${{ env.admin_aifactorySuffixRG }}' -commonRGNamePrefixVar '${{ env.admin_aifactoryPrefixRG }}' -commonResourceSuffixADO '${{ env.admin_commonResourceSuffix }}' -locationADO '${{ env.admin_location}}' -locationSuffixADO '${{ env.admin_location_SHORT }}' -projectTypeADO '${{ env.admin_projectType }}' -useServicePrincipal
          "
        azPSVersion: latest
        shell: pwsh
    - name: 05_bicep_deploy_subnets_and_NSGs
      if: env.ENABLE_NETWORKING_JOB  != 'false'
      uses: azure/cli@v2
      with: 
        #working-directory: "${{ github.workspace }}/azure-enterprise-scale-ml/environment_setup/aifactory/bicep/"
        inlineScript: |
          echo "Deploying subnets and NSG to subscription: ${{ env.dev_test_prod_sub_id }}"
          az deployment group create \
          --name "esml-p${{ env.project_number_000 }}-${{ env.dev_test_prod }}-${{ env.admin_locationSuffix }}${{ env.admin_aifactorySuffixRG }}SubnetDeplProj" \
          --subscription "${{ env.dev_test_prod_sub_id }}" \
          --resource-group "$( cat "./aifactory/parameters/subnetParameters.json" | grep vnetResourceGroup -A1 | tail -n1 | cut -d: -f2 | tr -d " \"" )" \
          --template-file "azure-enterprise-scale-ml\environment_setup\aifactory\bicep\esml-genai-1\31-network.bicep" \
          --parameters @"./aifactory/parameters/subnetParameters.json" \
          --parameters @"./aifactory/parameters/10-esml-globals-override.json" \
          --parameters env="${{ env.dev_test_prod }}" \
          --parameters projectNumber="${{ env.project_number_000 }}"
        azcliversion: latest
    - name: 08_az_remove_ip_from_seeding_keyvault_FW_whitelist
      if: env.ENABLE_NETWORKING_JOB  != 'false'
      uses: azure/cli@v2
      with:
        inlineScript: az keyvault network-rule remove --resource-group ${{ env.admin_bicep_kv_fw_rg }} --name ${{ env.admin_bicep_kv_fw }} --ip-address $runner_ip
        azcliversion: latest
      #if: always()
  job2-deploy-services-project-genai:
      name: BICEP - ESGenAI services to RG
      environment: ${{github.event.inputs.environment}}
      runs-on: ubuntu-latest
      needs: job1-deploy-networking-project-genai
      if: always()
      defaults:
        run:
          shell: pwsh
          #working-directory: "${{ github.workspace }}/azure-enterprise-scale-ml/environment_setup/aifactory/bicep/scripts/"
      steps:
      - name: Azure Login
        uses: azure/login@v2
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
          enable-AzPSSession: true
      - name: GIT
        uses: actions/checkout@v4
        with:
          submodules: true
      - name: 01_pwsh_get_IP_for_GH_runner
        run: |
          $resp = Invoke-RestMethod http://ipinfo.io/json | Select -exp ip
          echo "runner_ip=$resp" | Out-File -FilePath $Env:GITHUB_ENV -Encoding utf8 -Append
          echo "Environment is (env.AZURE_ENV_NAME): ${{env.dev_test_prod}}"
        shell: pwsh
      - name: Use environment variable
        run: |
          echo "The value of runner_ip is $runner_ip"
      - name: 02_az_set_ip_to_seeding_keyvault_FW_whitelist
        uses: azure/cli@v2
        with:
          inlineScript: az keyvault network-rule add --resource-group ${{ env.admin_bicep_kv_fw_rg }} --name ${{ env.admin_bicep_kv_fw }} --ip-address $runner_ip
          azcliversion: latest
      - name: 03_az_download_seeding_keyvault
        uses: azure/cli@v2
        with:
          inlineScript: |
            echo "common-sp-appid-value=$(az keyvault secret show --vault-name ${{ env.admin_bicep_kv_fw }} --name ${{ env.common-sp-appid-seeding-kv-name }} --query 'value' --output tsv)" >> $GITHUB_ENV
            echo "common-sp-secret-value=$(az keyvault secret show --vault-name ${{ env.admin_bicep_kv_fw }} --name ${{ env.common-sp-secret-seeding-kv-name }} --query 'value' --output tsv)" >> $GITHUB_ENV
          azcliversion: latest
      - name: Generate dynamic network parameters
        working-directory: ${{ github.workspace }}/azure-enterprise-scale-ml/environment_setup/aifactory/bicep/scripts
        run: |
          sudo pwsh -Command "${{ github.workspace }}/azure-enterprise-scale-ml/environment_setup/aifactory/bicep/scripts/genDynamicNetworkParamFile.ps1 -spObjId '${{env.common-sp-appid-value}}' -spSecret '${{env.common-sp-secret-value}}' -useServicePrincipal -bicepPar1 '../../../../../aifactory/parameters/10-esml-globals-1.json' -bicepPar2 '../../../../../aifactory/parameters/10-esml-globals-2-12_13_21_22.json' -bicepPar3 '../../../../../aifactory/parameters/10-esml-globals-4-13_21_22.json' -bicepPar4 '../../../../../aifactory/parameters/21-22-esml-prj-parameters.json' -filePath '../../../../../aifactory/parameters/' -env '${{env.dev_test_prod}}' -locationSuffixADO '${{env.admin_locationSuffix}}' -aifactorySuffixRGADO '${{env.admin_aifactorySuffixRG}}' -commonRGNamePrefixVar '${{ env.admin_aifactoryPrefixRG }}' -projectNumber '${{ env.project_number_000 }}' -subscriptionId '${{env.dev_test_prod_sub_id}}' -bicepPar5 '../../../../../aifactory/parameters/10-esml-globals-override.json' -projectTypeADO '${{env.admin_projectType}}'"
        shell: pwsh
      - name: 05_az_bicep_deploy_genai_project
        uses: azure/cli@v2
        with:
          #working-directory: "${{ github.workspace }}/azure-enterprise-scale-ml/environment_setup/aifactory/bicep/"
          inlineScript: |
            az deployment sub create \
            --name "esml-p${{ env.project_number_000 }}-${{ env.dev_test_prod }}-${{ env.admin_locationSuffix }}-${{ env.admin_prjResourceSuffix }}${{ env.admin_commonResourceSuffix }}$PrjDepl" \
            --subscription "${{ env.dev_test_prod_sub_id }}" \
            --location "${{ env.admin_location }}" \
            --template-file "azure-enterprise-scale-ml\environment_setup\aifactory\bicep\esml-genai-1\32-main.bicep" \
            --parameters adminPassword="$( date +%s | sha256sum | base64 | head -c 32 ; echo )" \
            --parameters @"./aifactory/parameters/10-esml-globals-1.json" \
            --parameters @"./aifactory/parameters/10-esml-globals-2-12_13_21_22.json" \
            --parameters @"./aifactory/parameters/10-esml-globals-3-12_13.json" \
            --parameters @"./aifactory/parameters/10-esml-globals-4-13_21_22.json" \
            --parameters @"./aifactory/parameters/10-esml-globals-5-13_23.json" \
            --parameters @"./aifactory/parameters/10-esml-globals-override.json" \
            --parameters @"./aifactory/parameters/21-22-esml-prj-parameters.json" \
            --parameters @"./aifactory/parameters/dynamicNetworkParams.json" \
            --parameters @"./aifactory/parameters/23-esml-prj-rbac-parameters.json" \
            --parameters @"./aifactory/parameters/31-esgenai-default.json" \
            --parameters env="${{ env.dev_test_prod }}" \
            --parameters projectNumber="${{ env.project_number_000 }}" \
            --parameters technicalAdminsObjectID="${{ env.technical_admins_ad_object_id }}" \
            --parameters technicalAdminsEmail="${{ env.technical_admins_email }}" \
            --parameters location="${{ env.admin_location }}" \
            --parameters locationSuffix="${{ env.admin_locationSuffix }}" \
            --parameters resourceSuffix="${{ env.admin_prjResourceSuffix }}" \
            --parameters aifactorySuffixRG="${{ env.admin_aifactorySuffixRG }}" \
            --parameters commonRGNamePrefix="${{ env.admin_aifactoryPrefixRG }}" \
            --parameters commonResourceSuffix="${{ env.admin_commonResourceSuffix }}" \
            --parameters projectServicePrincipleOID_SeedingKeyvaultName="${{ env.project_service_principal_OID_seeding_kv_name }}" \
            --parameters projectServicePrincipleAppID_SeedingKeyvaultName="${{ env.project_service_principal_AppID_seeding_kv_name }}" \
            --parameters projectServicePrincipleSecret_SeedingKeyvaultName="${{ env.project_service_principal_Secret_seeding_kv_name }}" \
            --parameters inputKeyvault="${{ env.admin_bicep_kv_fw }}" \
            --parameters inputKeyvaultResourcegroup="${{ env.admin_bicep_kv_fw_rg }}" \
            --parameters inputKeyvaultSubscription="${{ env.admin_bicep_input_keyvault_subscription }}" \
            --parameters aks_dev_sku_override="${{ env.admin_aks_gpu_sku_dev_override }}" \
            --parameters aks_test_prod_sku_override="${{ env.admin_aks_gpu_sku_test_prod_override }}" \
            --parameters aks_dev_nodes_override="${{ env.admin_aks_nodes_dev_override }}" \
            --parameters aks_test_prod_nodes_override="${{ env.admin_aks_nodes_testProd_override }}" \
            --parameters aks_version_override="${{ env.admin_aks_version_override }}" \
            --parameters aml_cluster_dev_sku_override="${{ env.admin_aml_cluster_sku_dev_override }}" \
            --parameters aml_cluster_test_prod_sku_override="${{ env.admin_aml_cluster_sku_testProd_override }}" \
            --parameters aml_cluster_dev_nodes_override="${{ env.admin_aml_cluster_maxNodes_dev_override }}" \
            --parameters aml_ci_dev_sku_override="${{ env.admin_aml_computeInstance_dev_sku_override }}" \
            --parameters aml_ci_test_prod_sku_override="${{ env.admin_aml_computeInstance_testProd_sku_override }}" \
            --parameters enablePublicGenAIAccess="${{ env.admin_enablePublicGenAIAccess }}" \
            --parameters serviceSettingDeployAzureAIVision="${{ env.optional_serviceSettingDeployAzureAIVision }}" \
            --parameters serviceSettingDeployAzureSpeech="${{ env.optional_serviceSettingDeployAzureSpeech }}" \
            --parameters serviceSettingDeployAIDocIntelligence="${{ env.optional_serviceSettingDeployAIDocIntelligence }}" \
            --parameters IPwhiteList="${{ env.project_IP_whitelist }}"
          azcliversion: latest
      - name: 06_az_remove_ip_from_seeding_keyvault_FW_whitelist
        uses: azure/cli@v2
        with:
          inlineScript: az keyvault network-rule remove --resource-group ${{ env.admin_bicep_kv_fw_rg }} --name ${{ env.admin_bicep_kv_fw }} --ip-address $runner_ip
          azcliversion: latest
        if: always()