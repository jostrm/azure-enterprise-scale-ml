//@description('Specifies cidr notation for genai subnet')
//param genaiSubnetCidr string
@allowed([
  'dev'
  'test'
  'prod'
])
@description('Specifies the name of the environment [dev,test,prod]. This name is reflected in resource group and sub-resources')
param env string
@description('Specifies the short location notation, such as "weu". This name is reflected in resource group and sub-resources')
param locationSuffix string
@description('Specifies virtual network name')
param vnetNameBase string
@description('Specifies the project number, such as a string "005". This is used to generate the projectName to embed in resources such as "prj005"')
param projectNumber string
var projectName = 'prj${projectNumber}'
@description('Deployment location')
param location string = resourceGroup().location
param commonResourceSuffix string
@description('Meta. Needed from ADO. To be grep from ADO in the az deployement call')
param vnetResourceGroup string 
@description('If BYO vNet is overriden, in parameter file: 10-esml-globals-override.json')
param vnetResourceGroup_param string = ''
@description('If BYO vNet is overriden, in parameter file: 10-esml-globals-override.json')
param vnetNameFull_param string = ''
@description('If Common resource group name is overriden, in parameter file: 10-esml-globals-override.json')
param commonResourceGroup_param string = ''
param datalakeName_param string = ''
param kvNameFromCOMMON_param string = ''

var vnetNameFull = vnetNameFull_param  != '' ? vnetNameFull_param  : '${vnetNameBase}-${locationSuffix}-${env}${commonResourceSuffix}'

@description('ESML can run standalone/demo mode, this is deafault mode, meaning default FALSE value, which creates private DnsZones,DnsZoneGroups, and vNetLinks. You can change this, to use your HUB DnzZones instead.')
param centralDnsZoneByPolicyInHub bool = false 

//var genaiSubnetSettings =   {
//  cidr: genaiSubnetCidr
//  name: 'genaiSubnetSettings'
//  delegations: []
//  serviceEndpoints: [
//    'Microsoft.KeyVault'
//    'Microsoft.Storage'
//  ]
//}

module nsgGenAI '../modules/aksNsg.bicep' = {
  name: 'aksNsgAKS'
  params: {
    name: 'aks-nsg-${projectName}-${locationSuffix}-${env}'
    location: location
    tags: {
      Description: 'AKS Nsg'
    }
  }
}

/*
module genaiSnt '../modules/subnetWithNsg.bicep' = {
  name: '${projectName}-aks'
  params: {
    name: 'snt-${projectName}-genai'
    virtualNetworkName: vnetNameFull
    addressPrefix: genaiSubnetSettings['cidr']
    location: location
    serviceEndpoints: genaiSubnetSettings['serviceEndpoints']
    delegations: genaiSubnetSettings['delegations']
    nsgId:nsgGenAI.outputs.nsgId
    centralDnsZoneByPolicyInHub:centralDnsZoneByPolicyInHub
  }

  dependsOn: [
    nsgGenAI
  ]
}

*/

// The following outputs are used for network_parameters.json
// that is generated by generateNetworkParameters.ps1 script
//output aksSubnetId string = genaiSnt.outputs.subnetId
