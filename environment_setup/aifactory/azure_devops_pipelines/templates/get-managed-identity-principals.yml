# Azure DevOps Pipeline Template for Managed Identity Principal ID Retrieval
# This script should be added after your foundation deployment and before core infrastructure deployment

steps:
  # Step 1: Deploy Foundation (your existing foundation deployment task)
  - task: AzureResourceManagerTemplateDeployment@3
    displayName: 'Deploy Foundation Infrastructure'
    name: 'deployFoundation'
    inputs:
      deploymentScope: 'Subscription'
      azureResourceManagerConnection: $(serviceConnection)
      subscriptionId: $(subscriptionId)
      location: $(location)
      templateLocation: 'Linked artifact'
      csmFile: '$(Pipeline.Workspace)/bicep/01-foundation.bicep'
      csmParametersFile: '$(Pipeline.Workspace)/parameters/01-foundation.parameters.json'
      deploymentName: 'foundation-$(Build.BuildNumber)'

  # Step 2: Extract Principal IDs from deployed Managed Identities
  - task: AzurePowerShell@5
    displayName: 'Get Managed Identity Principal IDs'
    inputs:
      azureSubscription: $(serviceConnection)
      scriptType: 'InlineScript'
      azurePowerShellVersion: 'LatestVersion'
      inline: |
        # Get foundation deployment outputs
        $deploymentName = "foundation-$(Build.BuildNumber)"
        Write-Host "Getting outputs from deployment: $deploymentName"
        
        $foundationOutputs = Get-AzDeployment -Name $deploymentName
        $outputs = $foundationOutputs.Outputs.foundationOutputs.Value
        
        $resourceGroup = $outputs.projectResourceGroupName
        $miProjectName = $outputs.miProjectName
        $miACAName = $outputs.miACAName
        
        Write-Host "Resource Group: $resourceGroup"
        Write-Host "Project MI Name: $miProjectName"
        Write-Host "ACA MI Name: $miACAName"
        
        # Get Principal IDs
        try {
          $miProject = Get-AzUserAssignedIdentity -ResourceGroupName $resourceGroup -Name $miProjectName -ErrorAction Stop
          $miProjectPrincipalId = $miProject.PrincipalId
          Write-Host "Project MI Principal ID: $miProjectPrincipalId"
          Write-Host "##vso[task.setvariable variable=miProjectPrincipalId;isOutput=true]$miProjectPrincipalId"
        }
        catch {
          Write-Warning "Could not retrieve Project MI Principal ID: $_"
          Write-Host "##vso[task.setvariable variable=miProjectPrincipalId;isOutput=true]"
        }
        
        try {
          $miACA = Get-AzUserAssignedIdentity -ResourceGroupName $resourceGroup -Name $miACAName -ErrorAction Stop
          $miACAPrincipalId = $miACA.PrincipalId
          Write-Host "ACA MI Principal ID: $miACAPrincipalId"
          Write-Host "##vso[task.setvariable variable=miACAPrincipalId;isOutput=true]$miACAPrincipalId"
        }
        catch {
          Write-Warning "Could not retrieve ACA MI Principal ID: $_"
          Write-Host "##vso[task.setvariable variable=miACAPrincipalId;isOutput=true]"
        }
    name: 'getMIPrincipalIds'

  # Step 3: Deploy Core Infrastructure with Principal IDs
  - task: AzureResourceManagerTemplateDeployment@3
    displayName: 'Deploy Core Infrastructure'
    inputs:
      deploymentScope: 'Subscription'
      azureResourceManagerConnection: $(serviceConnection)
      subscriptionId: $(subscriptionId)
      location: $(location)
      templateLocation: 'Linked artifact'
      csmFile: '$(Pipeline.Workspace)/bicep/03-core-infrastructure.bicep'
      csmParametersFile: '$(Pipeline.Workspace)/parameters/03-core-infrastructure.parameters.json'
      overrideParameters: |
        -miProjectPrincipalId "$(getMIPrincipalIds.miProjectPrincipalId)"
        -miACAPrincipalId "$(getMIPrincipalIds.miACAPrincipalId)"
        -env "$(env)"
        -projectNumber "$(projectNumber)"
        -location "$(location)"
        -locationSuffix "$(locationSuffix)"
        -commonResourceSuffix "$(commonResourceSuffix)"
        -resourceSuffix "$(resourceSuffix)"
        -tenantId "$(tenantId)"
        -vnetNameFull "$(vnetNameFull)"
        -vnetResourceGroupName "$(vnetResourceGroupName)"
        -genaiSubnetId "$(genaiSubnetId)"
        -aksSubnetId "$(aksSubnetId)"
        -targetResourceGroup "$(targetResourceGroup)"
        -commonResourceGroup "$(commonResourceGroup)"
        -aifactorySuffixRG "$(aifactorySuffixRG)"
        -commonRGNamePrefix "$(commonRGNamePrefix)"
        -inputKeyvault "$(inputKeyvault)"
        -inputKeyvaultResourcegroup "$(inputKeyvaultResourcegroup)"
        -inputKeyvaultSubscription "$(inputKeyvaultSubscription)"
        -projectServicePrincipleOID_SeedingKeyvaultName "$(projectServicePrincipleOID_SeedingKeyvaultName)"
        -projectServicePrincipleAppID_SeedingKeyvaultName "$(projectServicePrincipleAppID_SeedingKeyvaultName)"
        -projectServicePrincipleSecret_SeedingKeyvaultName "$(projectServicePrincipleSecret_SeedingKeyvaultName)"
        -aifactorySalt10char "$(aifactorySalt10char)"
        -randomValue "$(randomValue)"
        -adminUsername "$(adminUsername)"
        -adminPassword "$(adminPassword)"
      deploymentName: 'core-infrastructure-$(Build.BuildNumber)'
